// <auto-generated />
using System;
using MessageBoardApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MessageBoardApi.Migrations
{
    [DbContext(typeof(MessageBoardApiContext))]
    partial class MessageBoardApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MessageBoardApi.Models.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BoardTitle")
                        .HasColumnType("longtext");

                    b.HasKey("BoardId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            BoardTitle = "DnD MeetUp"
                        });
                });

            modelBuilder.Entity("MessageBoardApi.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("MessageDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MessageText")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            MessageDateTime = new DateTime(2023, 6, 11, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            MessageText = "Helloooo",
                            UserName = "Whoosh101"
                        });
                });

            modelBuilder.Entity("MessageBoardApi.Models.MessageBoard", b =>
                {
                    b.Property<int>("MessageBoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.HasKey("MessageBoardId");

                    b.HasIndex("BoardId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageBoards");

                    b.HasData(
                        new
                        {
                            MessageBoardId = 1,
                            BoardId = 1,
                            MessageId = 1
                        });
                });

            modelBuilder.Entity("MessageBoardApi.Models.MessageBoard", b =>
                {
                    b.HasOne("MessageBoardApi.Models.Board", "Board")
                        .WithMany("JoinEntities")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MessageBoardApi.Models.Message", "Message")
                        .WithMany("JoinEntities")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("MessageBoardApi.Models.Board", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("MessageBoardApi.Models.Message", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
